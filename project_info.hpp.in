#pragma once
#include <iostream>


namespace project_info
{
#define PROJECT_INFO_VERSION_MAJOR     @PROJECT_VERSION_MAJOR@
#define PROJECT_INFO_VERSION_MINOR     @PROJECT_VERSION_MINOR@
#define PROJECT_INFO_VERSION_PATCH     @PROJECT_VERSION_PATCH@
#define PROJECT_INFO_VERSION_BUILD_NUM @BINTRAY_BUILD_NUMBER@

  class version {
    private:
      static constexpr unsigned major{PROJECT_INFO_VERSION_MAJOR};
      static constexpr unsigned minor{PROJECT_INFO_VERSION_MINOR};
      static constexpr unsigned patch{PROJECT_INFO_VERSION_PATCH};
      static constexpr unsigned build_num{PROJECT_INFO_VERSION_BUILD_NUM};

    public:
#define CREATE_GET(specifiers, var) \
      specifiers auto get_##var() \
      { return var; } //

      CREATE_GET(static constexpr, major);
      CREATE_GET(static constexpr, minor);
      CREATE_GET(static constexpr, patch);
      CREATE_GET(static constexpr, build_num);
#undef CREATE_GET

      friend std::ostream &operator << (std::ostream &, version const &);
  };
#undef PROJECT_INFO_VERSION_MAJOR
#undef PROJECT_INFO_VERSION_MINOR
#undef PROJECT_INFO_VERSION_PATCH
#undef PROJECT_INFO_VERSION_BUILD_NUM
}
